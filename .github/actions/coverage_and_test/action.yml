name: "Test and coverage check"
description: "Test and coverage check with gcovr, pass if coverage is greater than 20%"

runs:
  using: "composite"
  steps:
    - name: "Run coverage"
      shell: bash
      run: |
        PROJECT_PATH=$(pwd)

        # This line executes de Cmake tests suite with the options 
        # --test-dir build/tests: indicates where the test binary is (which directory)
        #--output-on-failure : normaly, ctest displays the output only when tests fail, with this options 
        #displays the output regardless of the result
        ctest --test-dir build/tests --output-on-failure

        # gcovr makes a test coverage inform from the files in PROJECT_PATH and saves it in a file names coverage.txt in the root directory
        gcovr -r $PROJECT_PATH . > $PROJECT_PATH/coverage.txt

        echo "Runnig: gcovr -r $PROJECT_PATH ."

        cat $PROJECT_PATH/coverage.txt

        # Find the value of correct coverage
        # saves in the COVERAGE_RESULT the percentage of code with test coverage using grep (to search keyword "TOTAL")
        #and then using pipes (|) extracts the last field (column) with the value to finally cut the '%' sign
        COVERAGE_RESULT=$(grep "TOTAL" $PROJECT_PATH/coverage.txt | awk '{print $NF}' | cut -d '%' -f 1)

        # Coverage lines GT 20
        if [ "$(echo "$COVERAGE_RESULT > 20" | bc)" -eq 1 ]; then
            echo "Coverage is greater than 20%. Nice!"
            exit 0
        else
            echo "Error: Coverage is less than or equal to 20%"
            exit 1
        fi

    # Upload errors as an artifact, when failed
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: Tests or coverage errors!!!
        path: $(pwd)/error_flag.txt
        retention-days: 1
